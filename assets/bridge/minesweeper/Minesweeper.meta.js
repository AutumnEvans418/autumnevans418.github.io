Bridge.assembly("Minesweeper", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = ["System.Collections.Generic","Minesweeper","System","Bridge.QUnit"];
    $m("Minesweeper.Generation", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),$n[1].INeuralNetwork,$n[1].INeuralNetwork,$n[1].INeuralNetwork,$n[2].Int32],"pi":[{"n":"neuralNetworks","pt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"ps":0},{"n":"best","pt":$n[1].INeuralNetwork,"ps":1},{"n":"worst","pt":$n[1].INeuralNetwork,"ps":2},{"n":"average","pt":$n[1].INeuralNetwork,"ps":3},{"n":"generationIndex","pt":$n[2].Int32,"ps":4}],"sn":"ctor"},{"a":2,"n":"Average","t":16,"rt":$n[1].INeuralNetwork,"g":{"a":2,"n":"get_Average","t":8,"rt":$n[1].INeuralNetwork,"fg":"Average"},"fn":"Average"},{"a":2,"n":"Best","t":16,"rt":$n[1].INeuralNetwork,"g":{"a":2,"n":"get_Best","t":8,"rt":$n[1].INeuralNetwork,"fg":"Best"},"fn":"Best"},{"a":2,"n":"GenerationIndex","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_GenerationIndex","t":8,"rt":$n[2].Int32,"fg":"GenerationIndex","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"GenerationIndex"},{"a":2,"n":"NeuralNetworks","t":16,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"g":{"a":2,"n":"get_NeuralNetworks","t":8,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"fg":"NeuralNetworks"},"fn":"NeuralNetworks"},{"a":2,"n":"Worst","t":16,"rt":$n[1].INeuralNetwork,"g":{"a":2,"n":"get_Worst","t":8,"rt":$n[1].INeuralNetwork,"fg":"Worst"},"fn":"Worst"},{"a":1,"backing":true,"n":"<Average>k__BackingField","t":4,"rt":$n[1].INeuralNetwork,"sn":"Average"},{"a":1,"backing":true,"n":"<Best>k__BackingField","t":4,"rt":$n[1].INeuralNetwork,"sn":"Best"},{"a":1,"backing":true,"n":"<GenerationIndex>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"GenerationIndex","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<NeuralNetworks>k__BackingField","t":4,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"sn":"NeuralNetworks"},{"a":1,"backing":true,"n":"<Worst>k__BackingField","t":4,"rt":$n[1].INeuralNetwork,"sn":"Worst"}]}; }, $n);
    $m("Minesweeper.NeuroBackPropagation", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].INeuralNetwork,$n[2].Double],"pi":[{"n":"network","pt":$n[1].INeuralNetwork,"ps":0},{"n":"steps","pt":$n[2].Double,"ps":1}],"sn":"ctor"},{"a":2,"n":"Error","t":8,"pi":[{"n":"output","pt":$n[2].Double,"ps":0},{"n":"target","pt":$n[2].Double,"ps":1}],"sn":"Error","rt":$n[2].Double,"p":[$n[2].Double,$n[2].Double],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"Evolve","t":8,"pi":[{"n":"error","pt":$n[2].Double,"ps":0}],"sn":"Evolve","rt":$n[1].INeuralNetwork,"p":[$n[2].Double]},{"a":2,"n":"EvolveGeneration","t":8,"sn":"EvolveGeneration","rt":$n[1].IGeneration},{"a":2,"n":"FeedForward","t":8,"pi":[{"n":"input","pt":$n[2].Array.type(System.Double),"ps":0},{"n":"prediction","pt":$n[2].Array.type(System.Double),"ps":1}],"sn":"FeedForward","rt":$n[2].Void,"p":[$n[2].Array.type(System.Double),$n[2].Array.type(System.Double)]},{"a":2,"n":"PartialDerivativeOutput","t":8,"pi":[{"n":"output","pt":$n[2].Double,"ps":0},{"n":"target","pt":$n[2].Double,"ps":1}],"sn":"PartialDerivativeOutput","rt":$n[2].Double,"p":[$n[2].Double,$n[2].Double],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"FitnessVal","t":16,"rt":$n[1].IFitnessVal,"g":{"a":2,"n":"get_FitnessVal","t":8,"rt":$n[1].IFitnessVal,"fg":"FitnessVal"},"fn":"FitnessVal"},{"a":2,"n":"Generation","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Generation","t":8,"rt":$n[2].Int32,"fg":"Generation","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Generation","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Generation"},"fn":"Generation"},{"a":1,"n":"_network","t":4,"rt":$n[1].INeuralNetwork,"sn":"_network","ro":true},{"a":1,"n":"_steps","t":4,"rt":$n[2].Double,"sn":"_steps","ro":true,"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"backing":true,"n":"<FitnessVal>k__BackingField","t":4,"rt":$n[1].IFitnessVal,"sn":"FitnessVal"},{"a":1,"backing":true,"n":"<Generation>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Generation","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("Minesweeper.NeuroEvolution", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].IFitnessVal,$n[2].Int32,Function,$n[2].Random],"pi":[{"n":"fitnessVal","pt":$n[1].IFitnessVal,"ps":0},{"n":"speciesCount","pt":$n[2].Int32,"ps":1},{"n":"neuralFunc","pt":Function,"ps":2},{"n":"random","pt":$n[2].Random,"ps":3}],"sn":"ctor"},{"a":1,"n":"Breed","t":8,"pi":[{"n":"orderedNetworks","ref":true,"pt":System.Array.type(Minesweeper.INeuralNetwork),"ps":0}],"sn":"Breed","rt":$n[2].Void,"p":[System.Array.type(Minesweeper.INeuralNetwork)]},{"a":2,"n":"Evolve","t":8,"pi":[{"n":"error","pt":$n[2].Double,"ps":0}],"sn":"Evolve","rt":$n[1].INeuralNetwork,"p":[$n[2].Double]},{"a":2,"n":"EvolveGeneration","t":8,"sn":"EvolveGeneration","rt":$n[1].IGeneration},{"a":1,"n":"Mutate","t":8,"pi":[{"n":"network","pt":$n[1].INeuralNetwork,"ps":0}],"sn":"Mutate","rt":$n[2].Void,"p":[$n[1].INeuralNetwork]},{"v":true,"a":3,"n":"OnGenerationFinished","t":8,"pi":[{"n":"e","pt":$n[1].IGeneration,"ps":0}],"sn":"OnGenerationFinished","rt":$n[2].Void,"p":[$n[1].IGeneration]},{"a":2,"n":"FitnessVal","t":16,"rt":$n[1].IFitnessVal,"g":{"a":2,"n":"get_FitnessVal","t":8,"rt":$n[1].IFitnessVal,"fg":"FitnessVal"},"fn":"FitnessVal"},{"a":2,"n":"Generation","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Generation","t":8,"rt":$n[2].Int32,"fg":"Generation","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Generation","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Generation"},"fn":"Generation"},{"a":2,"n":"NeuralNetworks","t":16,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"g":{"a":2,"n":"get_NeuralNetworks","t":8,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"fg":"NeuralNetworks"},"s":{"a":1,"n":"set_NeuralNetworks","t":8,"p":[$n[0].IEnumerable$1(Minesweeper.INeuralNetwork)],"rt":$n[2].Void,"fs":"NeuralNetworks"},"fn":"NeuralNetworks"},{"a":1,"n":"_random","t":4,"rt":$n[2].Random,"sn":"_random","ro":true},{"a":1,"n":"_speciesCount","t":4,"rt":$n[2].Int32,"sn":"_speciesCount","ro":true,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GenerationFinished","t":2,"ad":{"a":2,"n":"add_GenerationFinished","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addGenerationFinished","rt":$n[2].Void,"p":[Function]},"r":{"a":2,"n":"remove_GenerationFinished","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeGenerationFinished","rt":$n[2].Void,"p":[Function]}},{"a":1,"backing":true,"n":"<FitnessVal>k__BackingField","t":4,"rt":$n[1].IFitnessVal,"sn":"FitnessVal"},{"a":1,"backing":true,"n":"<Generation>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Generation","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<NeuralNetworks>k__BackingField","t":4,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"sn":"NeuralNetworks"}]}; }, $n);
    $m("Minesweeper.BaseCell", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"DisplayValue","t":8,"sn":"DisplayValue","rt":$n[2].String},{"v":true,"a":2,"n":"Highlight","t":8,"sn":"Highlight","rt":$n[2].Void},{"v":true,"a":2,"n":"Hit","t":8,"pi":[{"n":"x","pt":$n[2].Single,"ps":0},{"n":"y","pt":$n[2].Single,"ps":1}],"sn":"Hit","rt":$n[2].Boolean,"p":[$n[2].Single,$n[2].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"v":true,"a":3,"n":"OnPropertyChanged","t":8,"pi":[{"n":"propertyName","dv":null,"o":true,"pt":$n[2].String,"ps":0}],"sn":"OnPropertyChanged","rt":$n[2].Void,"p":[$n[2].String]},{"v":true,"a":3,"n":"OnVisualChange","t":8,"sn":"OnVisualChange","rt":$n[2].Void},{"v":true,"a":2,"n":"Show","t":8,"sn":"Show","rt":$n[2].Void},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[2].String},{"v":true,"a":2,"n":"UnHighLight","t":8,"sn":"UnHighLight","rt":$n[2].Void},{"v":true,"a":2,"n":"Bomb","t":16,"rt":$n[2].Boolean,"g":{"v":true,"a":2,"n":"get_Bomb","t":8,"rt":$n[2].Boolean,"fg":"Bomb","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"v":true,"a":2,"n":"set_Bomb","t":8,"p":[$n[2].Boolean],"rt":$n[2].Void,"fs":"Bomb"},"fn":"Bomb"},{"v":true,"a":2,"n":"Column","t":16,"rt":$n[2].Int32,"g":{"v":true,"a":2,"n":"get_Column","t":8,"rt":$n[2].Int32,"fg":"Column","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"v":true,"a":2,"n":"set_Column","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Column"},"fn":"Column"},{"v":true,"a":2,"n":"Flag","t":16,"rt":$n[2].Boolean,"g":{"v":true,"a":2,"n":"get_Flag","t":8,"rt":$n[2].Boolean,"fg":"Flag","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"v":true,"a":2,"n":"set_Flag","t":8,"p":[$n[2].Boolean],"rt":$n[2].Void,"fs":"Flag"},"fn":"Flag"},{"v":true,"a":2,"n":"IsHighlighted","t":16,"rt":$n[2].Boolean,"g":{"v":true,"a":2,"n":"get_IsHighlighted","t":8,"rt":$n[2].Boolean,"fg":"IsHighlighted","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"v":true,"a":2,"n":"set_IsHighlighted","t":8,"p":[$n[2].Boolean],"rt":$n[2].Void,"fs":"IsHighlighted"},"fn":"IsHighlighted"},{"v":true,"a":2,"n":"Row","t":16,"rt":$n[2].Int32,"g":{"v":true,"a":2,"n":"get_Row","t":8,"rt":$n[2].Int32,"fg":"Row","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"v":true,"a":2,"n":"set_Row","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Row"},"fn":"Row"},{"a":2,"n":"ShowBomb","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_ShowBomb","t":8,"rt":$n[2].Boolean,"fg":"ShowBomb","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"ShowBomb"},{"a":2,"n":"ShowEmpty","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_ShowEmpty","t":8,"rt":$n[2].Boolean,"fg":"ShowEmpty","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"ShowEmpty"},{"a":2,"n":"ShowFlag","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_ShowFlag","t":8,"rt":$n[2].Boolean,"fg":"ShowFlag","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"ShowFlag"},{"a":2,"n":"ShowValue","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_ShowValue","t":8,"rt":$n[2].Boolean,"fg":"ShowValue","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"ShowValue"},{"v":true,"a":2,"n":"Value","t":16,"rt":$n[2].Int32,"g":{"v":true,"a":2,"n":"get_Value","t":8,"rt":$n[2].Int32,"fg":"Value","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"v":true,"a":2,"n":"set_Value","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Value"},"fn":"Value"},{"v":true,"a":2,"n":"Visible","t":16,"rt":$n[2].Boolean,"g":{"v":true,"a":2,"n":"get_Visible","t":8,"rt":$n[2].Boolean,"fg":"Visible","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"v":true,"a":2,"n":"set_Visible","t":8,"p":[$n[2].Boolean],"rt":$n[2].Void,"fs":"Visible"},"fn":"Visible"},{"v":true,"a":2,"n":"Width","t":16,"rt":$n[2].Single,"g":{"v":true,"a":2,"n":"get_Width","t":8,"rt":$n[2].Single,"fg":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"v":true,"a":2,"n":"set_Width","t":8,"p":[$n[2].Single],"rt":$n[2].Void,"fs":"Width"},"fn":"Width"},{"v":true,"a":2,"n":"X","t":16,"rt":$n[2].Single,"g":{"v":true,"a":2,"n":"get_X","t":8,"rt":$n[2].Single,"fg":"X","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"X"},{"v":true,"a":2,"n":"XOffset","t":16,"rt":$n[2].Single,"g":{"v":true,"a":2,"n":"get_XOffset","t":8,"rt":$n[2].Single,"fg":"XOffset","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"v":true,"a":2,"n":"set_XOffset","t":8,"p":[$n[2].Single],"rt":$n[2].Void,"fs":"XOffset"},"fn":"XOffset"},{"v":true,"a":2,"n":"Y","t":16,"rt":$n[2].Single,"g":{"v":true,"a":2,"n":"get_Y","t":8,"rt":$n[2].Single,"fg":"Y","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"Y"},{"v":true,"a":2,"n":"YOffset","t":16,"rt":$n[2].Single,"g":{"v":true,"a":2,"n":"get_YOffset","t":8,"rt":$n[2].Single,"fg":"YOffset","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"v":true,"a":2,"n":"set_YOffset","t":8,"p":[$n[2].Single],"rt":$n[2].Void,"fs":"YOffset"},"fn":"YOffset"},{"a":1,"n":"_bomb","t":4,"rt":$n[2].Boolean,"sn":"_bomb","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_flag","t":4,"rt":$n[2].Boolean,"sn":"_flag","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_value","t":4,"rt":$n[2].Int32,"sn":"_value","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_visible","t":4,"rt":$n[2].Boolean,"sn":"_visible","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"PropertyChanged","t":2,"ad":{"a":2,"n":"add_PropertyChanged","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addPropertyChanged","rt":$n[2].Void,"p":[Function]},"r":{"a":2,"n":"remove_PropertyChanged","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removePropertyChanged","rt":$n[2].Void,"p":[Function]}},{"a":2,"n":"VisualChange","t":2,"ad":{"a":2,"n":"add_VisualChange","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addVisualChange","rt":$n[2].Void,"p":[Function]},"r":{"a":2,"n":"remove_VisualChange","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeVisualChange","rt":$n[2].Void,"p":[Function]}},{"a":1,"backing":true,"n":"<Column>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Column","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<IsHighlighted>k__BackingField","t":4,"rt":$n[2].Boolean,"sn":"IsHighlighted","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"backing":true,"n":"<Row>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Row","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Width>k__BackingField","t":4,"rt":$n[2].Single,"sn":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"backing":true,"n":"<XOffset>k__BackingField","t":4,"rt":$n[2].Single,"sn":"XOffset","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"backing":true,"n":"<YOffset>k__BackingField","t":4,"rt":$n[2].Single,"sn":"YOffset","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Minesweeper.Theme", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"GetColor","is":true,"t":8,"pi":[{"n":"className","pt":$n[2].String,"ps":0},{"n":"prop","dv":"color","o":true,"pt":$n[2].String,"ps":1}],"sn":"GetColor","rt":$n[2].String,"p":[$n[2].String,$n[2].String]},{"a":2,"n":"BombBackgroundColor","is":true,"t":4,"rt":$n[2].String,"sn":"BombBackgroundColor"},{"a":2,"n":"BombColor","is":true,"t":4,"rt":$n[2].String,"sn":"BombColor"},{"a":2,"n":"BombFont","is":true,"t":4,"rt":$n[2].String,"sn":"BombFont"},{"a":2,"n":"CellColor","is":true,"t":4,"rt":$n[2].String,"sn":"CellColor"},{"a":2,"n":"CellStrokeColor","is":true,"t":4,"rt":$n[2].String,"sn":"CellStrokeColor"},{"a":1,"n":"ClassColor","is":true,"t":4,"rt":$n[0].Dictionary$2(System.String,System.String),"sn":"ClassColor"},{"a":2,"n":"DefaultFill","is":true,"t":4,"rt":$n[2].String,"sn":"DefaultFill"},{"a":2,"n":"EmptyCellColor","is":true,"t":4,"rt":$n[2].String,"sn":"EmptyCellColor"},{"a":2,"n":"FlagColor","is":true,"t":4,"rt":$n[2].String,"sn":"FlagColor"},{"a":2,"n":"FlagFont","is":true,"t":4,"rt":$n[2].String,"sn":"FlagFont"},{"a":2,"n":"HighlightColor","is":true,"t":4,"rt":$n[2].String,"sn":"HighlightColor"},{"a":2,"n":"ValueFont","is":true,"t":4,"rt":$n[2].String,"sn":"ValueFont"}]}; }, $n);
    $m("Minesweeper.Cell", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].BaseCell,HTMLCanvasElement],"pi":[{"n":"cell","pt":$n[1].BaseCell,"ps":0},{"n":"canvas","pt":HTMLCanvasElement,"ps":1}],"sn":"ctor"},{"a":2,"n":"Highlight","t":8,"sn":"Highlight","rt":$n[2].Void},{"a":2,"n":"Show","t":8,"sn":"Show","rt":$n[2].Void},{"a":2,"n":"UnHighLight","t":8,"sn":"UnHighLight","rt":$n[2].Void},{"a":1,"n":"_canvas","t":4,"rt":HTMLCanvasElement,"sn":"_canvas","ro":true},{"a":1,"n":"_cell","t":4,"rt":$n[1].BaseCell,"sn":"_cell","ro":true}]}; }, $n);
    $m("Minesweeper.Ext", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"ArrayContentString","is":true,"t":8,"pi":[{"n":"array","pt":System.Array.type(System.Object),"ps":0}],"tpc":1,"tprm":["T"],"sn":"ArrayContentString","rt":$n[2].String,"p":[System.Array.type(System.Object)]},{"a":2,"n":"ToDoubleArray","is":true,"t":8,"pi":[{"n":"array","pt":$n[2].Array.type(System.Int32),"ps":0}],"sn":"ToDoubleArray","rt":$n[2].Array.type(System.Double),"p":[$n[2].Array.type(System.Int32)]}]}; }, $n);
    $m("Minesweeper.Game", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"ClickAction","t":8,"pi":[{"n":"score","pt":HTMLElement,"ps":0},{"n":"context","pt":CanvasRenderingContext2D,"ps":1},{"n":"x","pt":$n[2].Single,"ps":2},{"n":"y","pt":$n[2].Single,"ps":3},{"n":"flag","pt":$n[2].Boolean,"ps":4}],"sn":"ClickAction","rt":$n[2].Void,"p":[HTMLElement,CanvasRenderingContext2D,$n[2].Single,$n[2].Single,$n[2].Boolean]},{"a":1,"n":"GameSetup","t":8,"sn":"GameSetup","rt":$n[2].Void},{"a":2,"n":"GetX","t":8,"pi":[{"n":"x","pt":$n[2].Single,"ps":0}],"sn":"GetX","rt":$n[2].Single,"p":[$n[2].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"GetY","t":8,"pi":[{"n":"y","pt":$n[2].Single,"ps":0}],"sn":"GetY","rt":$n[2].Single,"p":[$n[2].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"SetupCanvas","t":8,"pi":[{"n":"canvas","pt":HTMLCanvasElement,"ps":0},{"n":"score","pt":HTMLElement,"ps":1}],"sn":"SetupCanvas","rt":$n[2].Void,"p":[HTMLCanvasElement,HTMLElement]},{"a":1,"n":"SetupHtml","t":8,"sn":"SetupHtml","rt":$n[2].Void},{"a":1,"n":"Result","t":16,"rt":HTMLElement,"g":{"a":1,"n":"get_Result","t":8,"rt":HTMLElement,"fg":"Result"},"fn":"Result"},{"a":1,"n":"Canvas","t":4,"rt":HTMLCanvasElement,"sn":"Canvas"},{"a":1,"n":"_flag","t":4,"rt":$n[2].Boolean,"sn":"_flag","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"boardId","t":4,"rt":$n[2].String,"sn":"boardId"},{"a":1,"n":"random","t":4,"rt":$n[2].Random,"sn":"random$1"}]}; }, $n);
    $m("Minesweeper.MinesweeperGrid", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].Int32,$n[2].Int32,$n[2].Single],"pi":[{"n":"rows","pt":$n[2].Int32,"ps":0},{"n":"columns","pt":$n[2].Int32,"ps":1},{"n":"width","pt":$n[2].Single,"ps":2}],"sn":"$ctor1"},{"a":2,"n":"GetStringRepresentation","t":8,"sn":"GetStringRepresentation","rt":$n[2].String},{"a":2,"n":"SetDimensions","t":8,"pi":[{"n":"width","pt":$n[2].Single,"ps":0},{"n":"xOffset","pt":$n[2].Single,"ps":1},{"n":"yOffset","pt":$n[2].Single,"ps":2}],"sn":"SetDimensions","rt":$n[2].Void,"p":[$n[2].Single,$n[2].Single,$n[2].Single]},{"a":1,"n":"Setup","t":8,"sn":"Setup","rt":$n[2].Void},{"a":2,"n":"SquareCells","t":8,"pi":[{"n":"cell","pt":$n[1].BaseCell,"ps":0}],"sn":"SquareCells","rt":System.Array.type(Minesweeper.BaseCell),"p":[$n[1].BaseCell]},{"a":2,"n":"Cells","t":16,"rt":$n[0].List$1(Minesweeper.BaseCell),"g":{"a":2,"n":"get_Cells","t":8,"rt":$n[0].List$1(Minesweeper.BaseCell),"fg":"Cells"},"s":{"a":2,"n":"set_Cells","t":8,"p":[$n[0].List$1(Minesweeper.BaseCell)],"rt":$n[2].Void,"fs":"Cells"},"fn":"Cells"},{"a":2,"n":"Columns","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Columns","t":8,"rt":$n[2].Int32,"fg":"Columns","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"Columns"},{"a":2,"n":"Rows","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Rows","t":8,"rt":$n[2].Int32,"fg":"Rows","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"Rows"},{"a":2,"n":"Width","t":16,"rt":$n[2].Single,"g":{"a":2,"n":"get_Width","t":8,"rt":$n[2].Single,"fg":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_Width","t":8,"p":[$n[2].Single],"rt":$n[2].Void,"fs":"Width"},"fn":"Width"},{"a":1,"backing":true,"n":"<Cells>k__BackingField","t":4,"rt":$n[0].List$1(Minesweeper.BaseCell),"sn":"Cells"},{"a":1,"backing":true,"n":"<Columns>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Columns","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Rows>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Rows","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Width>k__BackingField","t":4,"rt":$n[2].Single,"sn":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Minesweeper.INeuralNetwork", function () { return {"att":161,"a":2,"m":[{"ab":true,"a":2,"n":"Derivative","t":8,"pi":[{"n":"val","pt":$n[2].Double,"ps":0}],"sn":"Minesweeper$INeuralNetwork$derivative","rt":$n[2].Double,"p":[$n[2].Double],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"ab":true,"a":2,"n":"FeedForward","t":8,"pi":[{"n":"input","pt":$n[2].Array.type(System.Double),"ps":0}],"sn":"Minesweeper$INeuralNetwork$feedForward","rt":$n[2].Array.type(System.Double),"p":[$n[2].Array.type(System.Double)]},{"ab":true,"a":2,"n":"Sigmoid","t":8,"pi":[{"n":"val","pt":$n[2].Double,"ps":0}],"sn":"Minesweeper$INeuralNetwork$sigmoid","rt":$n[2].Double,"p":[$n[2].Double],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"ab":true,"a":2,"n":"Error","t":16,"rt":$n[2].Double,"g":{"ab":true,"a":2,"n":"get_Error","t":8,"rt":$n[2].Double,"fg":"Minesweeper$INeuralNetwork$Error","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},"s":{"ab":true,"a":2,"n":"set_Error","t":8,"p":[$n[2].Double],"rt":$n[2].Void,"fs":"Minesweeper$INeuralNetwork$Error"},"fn":"Minesweeper$INeuralNetwork$Error"},{"ab":true,"a":2,"n":"HiddenLayers","t":16,"rt":$n[2].Array.type(System.Array.type(System.Double)),"g":{"ab":true,"a":2,"n":"get_HiddenLayers","t":8,"rt":$n[2].Array.type(System.Array.type(System.Double)),"fg":"Minesweeper$INeuralNetwork$HiddenLayers"},"fn":"Minesweeper$INeuralNetwork$HiddenLayers"},{"ab":true,"a":2,"n":"Inputs","t":16,"rt":$n[2].Array.type(System.Double),"g":{"ab":true,"a":2,"n":"get_Inputs","t":8,"rt":$n[2].Array.type(System.Double),"fg":"Minesweeper$INeuralNetwork$Inputs"},"fn":"Minesweeper$INeuralNetwork$Inputs"},{"ab":true,"a":2,"n":"Outputs","t":16,"rt":$n[2].Array.type(System.Double),"g":{"ab":true,"a":2,"n":"get_Outputs","t":8,"rt":$n[2].Array.type(System.Double),"fg":"Minesweeper$INeuralNetwork$Outputs"},"fn":"Minesweeper$INeuralNetwork$Outputs"},{"ab":true,"a":2,"n":"Weights","t":16,"rt":$n[2].Array.type(System.Array.type(System.Double)),"g":{"ab":true,"a":2,"n":"get_Weights","t":8,"rt":$n[2].Array.type(System.Array.type(System.Double)),"fg":"Minesweeper$INeuralNetwork$Weights"},"fn":"Minesweeper$INeuralNetwork$Weights"},{"a":1,"backing":true,"n":"<Error>k__BackingField","t":4,"rt":$n[2].Double,"sn":"Minesweeper$INeuralNetwork$Error","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"backing":true,"n":"<HiddenLayers>k__BackingField","t":4,"rt":$n[2].Array.type(System.Array.type(System.Double)),"sn":"Minesweeper$INeuralNetwork$HiddenLayers"},{"a":1,"backing":true,"n":"<Inputs>k__BackingField","t":4,"rt":$n[2].Array.type(System.Double),"sn":"Minesweeper$INeuralNetwork$Inputs"},{"a":1,"backing":true,"n":"<Outputs>k__BackingField","t":4,"rt":$n[2].Array.type(System.Double),"sn":"Minesweeper$INeuralNetwork$Outputs"},{"a":1,"backing":true,"n":"<Weights>k__BackingField","t":4,"rt":$n[2].Array.type(System.Array.type(System.Double)),"sn":"Minesweeper$INeuralNetwork$Weights"}]}; }, $n);
    $m("Minesweeper.IFitnessVal", function () { return {"att":161,"a":2,"m":[{"ab":true,"a":2,"n":"EvaluateFitness","t":8,"pi":[{"n":"network","pt":$n[1].INeuralNetwork,"ps":0}],"sn":"Minesweeper$IFitnessVal$EvaluateFitness","rt":$n[2].Double,"p":[$n[1].INeuralNetwork],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"ab":true,"a":2,"n":"Maximize","t":16,"rt":$n[2].Boolean,"g":{"ab":true,"a":2,"n":"get_Maximize","t":8,"rt":$n[2].Boolean,"fg":"Minesweeper$IFitnessVal$Maximize","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Minesweeper$IFitnessVal$Maximize"},{"a":1,"backing":true,"n":"<Maximize>k__BackingField","t":4,"rt":$n[2].Boolean,"sn":"Minesweeper$IFitnessVal$Maximize","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("Minesweeper.IGeneration", function () { return {"att":161,"a":2,"m":[{"ab":true,"a":2,"n":"Average","t":16,"rt":$n[1].INeuralNetwork,"g":{"ab":true,"a":2,"n":"get_Average","t":8,"rt":$n[1].INeuralNetwork,"fg":"Minesweeper$IGeneration$Average"},"fn":"Minesweeper$IGeneration$Average"},{"ab":true,"a":2,"n":"Best","t":16,"rt":$n[1].INeuralNetwork,"g":{"ab":true,"a":2,"n":"get_Best","t":8,"rt":$n[1].INeuralNetwork,"fg":"Minesweeper$IGeneration$Best"},"fn":"Minesweeper$IGeneration$Best"},{"ab":true,"a":2,"n":"GenerationIndex","t":16,"rt":$n[2].Int32,"g":{"ab":true,"a":2,"n":"get_GenerationIndex","t":8,"rt":$n[2].Int32,"fg":"Minesweeper$IGeneration$GenerationIndex","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"Minesweeper$IGeneration$GenerationIndex"},{"ab":true,"a":2,"n":"NeuralNetworks","t":16,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"g":{"ab":true,"a":2,"n":"get_NeuralNetworks","t":8,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"fg":"Minesweeper$IGeneration$NeuralNetworks"},"fn":"Minesweeper$IGeneration$NeuralNetworks"},{"ab":true,"a":2,"n":"Worst","t":16,"rt":$n[1].INeuralNetwork,"g":{"ab":true,"a":2,"n":"get_Worst","t":8,"rt":$n[1].INeuralNetwork,"fg":"Minesweeper$IGeneration$Worst"},"fn":"Minesweeper$IGeneration$Worst"},{"a":1,"backing":true,"n":"<Average>k__BackingField","t":4,"rt":$n[1].INeuralNetwork,"sn":"Minesweeper$IGeneration$Average"},{"a":1,"backing":true,"n":"<Best>k__BackingField","t":4,"rt":$n[1].INeuralNetwork,"sn":"Minesweeper$IGeneration$Best"},{"a":1,"backing":true,"n":"<GenerationIndex>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Minesweeper$IGeneration$GenerationIndex","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<NeuralNetworks>k__BackingField","t":4,"rt":$n[0].IEnumerable$1(Minesweeper.INeuralNetwork),"sn":"Minesweeper$IGeneration$NeuralNetworks"},{"a":1,"backing":true,"n":"<Worst>k__BackingField","t":4,"rt":$n[1].INeuralNetwork,"sn":"Minesweeper$IGeneration$Worst"}]}; }, $n);
    $m("Minesweeper.IOptimizationFunction", function () { return {"att":161,"a":2,"m":[{"ab":true,"a":2,"n":"Evolve","t":8,"pi":[{"n":"error","pt":$n[2].Double,"ps":0}],"sn":"Minesweeper$IOptimizationFunction$Evolve","rt":$n[1].INeuralNetwork,"p":[$n[2].Double]},{"ab":true,"a":2,"n":"EvolveGeneration","t":8,"sn":"Minesweeper$IOptimizationFunction$EvolveGeneration","rt":$n[1].IGeneration},{"ab":true,"a":2,"n":"FitnessVal","t":16,"rt":$n[1].IFitnessVal,"g":{"ab":true,"a":2,"n":"get_FitnessVal","t":8,"rt":$n[1].IFitnessVal,"fg":"Minesweeper$IOptimizationFunction$FitnessVal"},"fn":"Minesweeper$IOptimizationFunction$FitnessVal"},{"ab":true,"a":2,"n":"Generation","t":16,"rt":$n[2].Int32,"g":{"ab":true,"a":2,"n":"get_Generation","t":8,"rt":$n[2].Int32,"fg":"Minesweeper$IOptimizationFunction$Generation","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"ab":true,"a":2,"n":"set_Generation","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Minesweeper$IOptimizationFunction$Generation"},"fn":"Minesweeper$IOptimizationFunction$Generation"},{"a":1,"backing":true,"n":"<FitnessVal>k__BackingField","t":4,"rt":$n[1].IFitnessVal,"sn":"Minesweeper$IOptimizationFunction$FitnessVal"},{"a":1,"backing":true,"n":"<Generation>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Minesweeper$IOptimizationFunction$Generation","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("Minesweeper.BaseFitnessTest", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"EvaluateFitness","t":8,"pi":[{"n":"network","pt":$n[1].INeuralNetwork,"ps":0}],"sn":"EvaluateFitness","rt":$n[2].Double,"p":[$n[1].INeuralNetwork],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"Maximize","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_Maximize","t":8,"rt":$n[2].Boolean,"fg":"Maximize","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Maximize"}]}; }, $n);
    $m("Minesweeper.NeuralNetwork", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].NeuralNetwork],"pi":[{"n":"network","pt":$n[1].NeuralNetwork,"ps":0}],"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].Random,$n[2].Int32,$n[2].Array.type(System.Int32),$n[2].Int32,$n[2].Double],"pi":[{"n":"random","pt":$n[2].Random,"ps":0},{"n":"inputs","pt":$n[2].Int32,"ps":1},{"n":"hiddenlayer","pt":$n[2].Array.type(System.Int32),"ps":2},{"n":"output","pt":$n[2].Int32,"ps":3},{"n":"bias","pt":$n[2].Double,"ps":4}],"sn":"$ctor1"},{"a":1,"n":"CalculateLayer","t":8,"pi":[{"n":"firstLayer","pt":$n[2].Array.type(System.Double),"ps":0},{"n":"secondLayer","pt":$n[2].Array.type(System.Double),"ps":1},{"n":"weights","pt":$n[2].Array.type(System.Double),"ps":2}],"sn":"CalculateLayer","rt":$n[2].Void,"p":[$n[2].Array.type(System.Double),$n[2].Array.type(System.Double),$n[2].Array.type(System.Double)]},{"a":2,"n":"Clone","t":8,"sn":"clone","rt":$n[2].Object},{"a":2,"n":"Derivative","t":8,"pi":[{"n":"x","pt":$n[2].Double,"ps":0}],"sn":"derivative","rt":$n[2].Double,"p":[$n[2].Double],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"FeedForward","t":8,"pi":[{"n":"input","pt":$n[2].Array.type(System.Double),"ps":0}],"sn":"feedForward","rt":$n[2].Array.type(System.Double),"p":[$n[2].Array.type(System.Double)]},{"a":1,"n":"InitWeights","t":8,"sn":"InitWeights","rt":$n[2].Void},{"a":2,"n":"ResetHiddenLayers","t":8,"sn":"ResetHiddenLayers","rt":$n[2].Void},{"a":1,"n":"SetWeights","t":8,"sn":"SetWeights","rt":$n[2].Void},{"a":2,"n":"Sigmoid","t":8,"pi":[{"n":"x","pt":$n[2].Double,"ps":0}],"sn":"sigmoid","rt":$n[2].Double,"p":[$n[2].Double],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[2].String},{"a":2,"n":"Error","t":16,"rt":$n[2].Double,"g":{"a":2,"n":"get_Error","t":8,"rt":$n[2].Double,"fg":"Error","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},"s":{"a":2,"n":"set_Error","t":8,"p":[$n[2].Double],"rt":$n[2].Void,"fs":"Error"},"fn":"Error"},{"a":2,"n":"HiddenLayers","t":16,"rt":$n[2].Array.type(System.Array.type(System.Double)),"g":{"a":2,"n":"get_HiddenLayers","t":8,"rt":$n[2].Array.type(System.Array.type(System.Double)),"fg":"HiddenLayers"},"fn":"HiddenLayers"},{"a":2,"n":"Inputs","t":16,"rt":$n[2].Array.type(System.Double),"g":{"a":2,"n":"get_Inputs","t":8,"rt":$n[2].Array.type(System.Double),"fg":"Inputs"},"s":{"a":1,"n":"set_Inputs","t":8,"p":[$n[2].Array.type(System.Double)],"rt":$n[2].Void,"fs":"Inputs"},"fn":"Inputs"},{"a":2,"n":"Outputs","t":16,"rt":$n[2].Array.type(System.Double),"g":{"a":2,"n":"get_Outputs","t":8,"rt":$n[2].Array.type(System.Double),"fg":"Outputs"},"s":{"a":1,"n":"set_Outputs","t":8,"p":[$n[2].Array.type(System.Double)],"rt":$n[2].Void,"fs":"Outputs"},"fn":"Outputs"},{"a":2,"n":"Weights","t":16,"rt":$n[2].Array.type(System.Array.type(System.Double)),"g":{"a":2,"n":"get_Weights","t":8,"rt":$n[2].Array.type(System.Array.type(System.Double)),"fg":"Weights"},"s":{"a":1,"n":"set_Weights","t":8,"p":[$n[2].Array.type(System.Array.type(System.Double))],"rt":$n[2].Void,"fs":"Weights"},"fn":"Weights"},{"a":1,"n":"_bias","t":4,"rt":$n[2].Double,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"n":"_random","t":4,"rt":$n[2].Random,"sn":"_random","ro":true},{"a":1,"backing":true,"n":"<Error>k__BackingField","t":4,"rt":$n[2].Double,"sn":"Error","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"backing":true,"n":"<HiddenLayers>k__BackingField","t":4,"rt":$n[2].Array.type(System.Array.type(System.Double)),"sn":"HiddenLayers"},{"a":1,"backing":true,"n":"<Inputs>k__BackingField","t":4,"rt":$n[2].Array.type(System.Double),"sn":"Inputs"},{"a":1,"backing":true,"n":"<Outputs>k__BackingField","t":4,"rt":$n[2].Array.type(System.Double),"sn":"Outputs"},{"a":1,"backing":true,"n":"<Weights>k__BackingField","t":4,"rt":$n[2].Array.type(System.Array.type(System.Double)),"sn":"Weights"}]}; }, $n);
    $m("Minesweeper.NeuralNetworkTest", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"EvolutionTest","t":8,"pi":[{"n":"assert","pt":$n[3].Assert,"ps":0}],"sn":"EvolutionTest","rt":$n[2].Void,"p":[$n[3].Assert]},{"a":1,"n":"HiddenLayerTest","t":8,"pi":[{"n":"assert","pt":$n[3].Assert,"ps":0}],"sn":"HiddenLayerTest","rt":$n[2].Void,"p":[$n[3].Assert]},{"a":1,"n":"InputTest","t":8,"pi":[{"n":"assert","pt":$n[3].Assert,"ps":0}],"sn":"InputTest","rt":$n[2].Void,"p":[$n[3].Assert]},{"a":1,"n":"ListCountAssert","is":true,"t":8,"pi":[{"n":"assert","pt":$n[3].Assert,"ps":0},{"n":"neuro","pt":$n[1].NeuroEvolution,"ps":1}],"sn":"ListCountAssert","rt":$n[2].Void,"p":[$n[3].Assert,$n[1].NeuroEvolution]},{"a":1,"n":"NeuroEvolution","t":8,"pi":[{"n":"assert","pt":$n[3].Assert,"ps":0}],"sn":"NeuroEvolution","rt":$n[2].Void,"p":[$n[3].Assert]},{"a":1,"n":"OutputTest","t":8,"pi":[{"n":"assert","pt":$n[3].Assert,"ps":0}],"sn":"OutputTest","rt":$n[2].Void,"p":[$n[3].Assert]},{"a":1,"n":"WeightTest","t":8,"pi":[{"n":"assert","pt":$n[3].Assert,"ps":0}],"sn":"WeightTest","rt":$n[2].Void,"p":[$n[3].Assert]}]}; }, $n);
    $m("Minesweeper.NoShowCell", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].Int32,$n[2].Int32,$n[2].Int32],"pi":[{"n":"row","pt":$n[2].Int32,"ps":0},{"n":"column","pt":$n[2].Int32,"ps":1},{"n":"width","pt":$n[2].Int32,"ps":2}],"sn":"$ctor1"}]}; }, $n);
    $m("Minesweeper.MinesweeperFitnessTest", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"EvaluateFitness","t":8,"pi":[{"n":"network","pt":$n[1].INeuralNetwork,"ps":0}],"sn":"EvaluateFitness","rt":$n[2].Double,"p":[$n[1].INeuralNetwork],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"Maximize","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_Maximize","t":8,"rt":$n[2].Boolean,"fg":"Maximize","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Maximize"}]}; }, $n);
    $m("Minesweeper.MinesweeperConfig", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"BombCount","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_BombCount","t":8,"rt":$n[2].Int32,"fg":"BombCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_BombCount","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"BombCount"},"fn":"BombCount"},{"a":2,"n":"CellWidth","t":16,"rt":$n[2].Nullable$1(System.Single),"g":{"a":2,"n":"get_CellWidth","t":8,"rt":$n[2].Nullable$1(System.Single),"fg":"CellWidth","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},"s":{"a":2,"n":"set_CellWidth","t":8,"p":[$n[2].Nullable$1(System.Single)],"rt":$n[2].Void,"fs":"CellWidth"},"fn":"CellWidth"},{"a":2,"n":"Columns","t":16,"rt":$n[2].Nullable$1(System.Int32),"g":{"a":2,"n":"get_Columns","t":8,"rt":$n[2].Nullable$1(System.Int32),"fg":"Columns","box":function ($v) { return Bridge.box($v, System.Int32, System.Nullable.toString, System.Nullable.getHashCode);}},"s":{"a":2,"n":"set_Columns","t":8,"p":[$n[2].Nullable$1(System.Int32)],"rt":$n[2].Void,"fs":"Columns"},"fn":"Columns"},{"a":2,"n":"Height","t":16,"rt":$n[2].Nullable$1(System.Single),"g":{"a":2,"n":"get_Height","t":8,"rt":$n[2].Nullable$1(System.Single),"fg":"Height","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},"s":{"a":2,"n":"set_Height","t":8,"p":[$n[2].Nullable$1(System.Single)],"rt":$n[2].Void,"fs":"Height"},"fn":"Height"},{"a":2,"n":"Rows","t":16,"rt":$n[2].Nullable$1(System.Int32),"g":{"a":2,"n":"get_Rows","t":8,"rt":$n[2].Nullable$1(System.Int32),"fg":"Rows","box":function ($v) { return Bridge.box($v, System.Int32, System.Nullable.toString, System.Nullable.getHashCode);}},"s":{"a":2,"n":"set_Rows","t":8,"p":[$n[2].Nullable$1(System.Int32)],"rt":$n[2].Void,"fs":"Rows"},"fn":"Rows"},{"a":2,"n":"Seed","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Seed","t":8,"rt":$n[2].Int32,"fg":"Seed","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Seed","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Seed"},"fn":"Seed"},{"a":2,"n":"Width","t":16,"rt":$n[2].Nullable$1(System.Single),"g":{"a":2,"n":"get_Width","t":8,"rt":$n[2].Nullable$1(System.Single),"fg":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},"s":{"a":2,"n":"set_Width","t":8,"p":[$n[2].Nullable$1(System.Single)],"rt":$n[2].Void,"fs":"Width"},"fn":"Width"},{"a":1,"n":"__Property__Initializer__BombCount","t":4,"rt":$n[2].Int32,"sn":"__Property__Initializer__BombCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"__Property__Initializer__CellWidth","t":4,"rt":$n[2].Nullable$1(System.Single),"sn":"__Property__Initializer__CellWidth","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},{"a":1,"n":"__Property__Initializer__Height","t":4,"rt":$n[2].Nullable$1(System.Single),"sn":"__Property__Initializer__Height","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},{"a":1,"n":"__Property__Initializer__Seed","t":4,"rt":$n[2].Int32,"sn":"__Property__Initializer__Seed","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"__Property__Initializer__Width","t":4,"rt":$n[2].Nullable$1(System.Single),"sn":"__Property__Initializer__Width","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},{"a":1,"backing":true,"n":"<BombCount>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"BombCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<CellWidth>k__BackingField","t":4,"rt":$n[2].Nullable$1(System.Single),"sn":"CellWidth","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},{"a":1,"backing":true,"n":"<Columns>k__BackingField","t":4,"rt":$n[2].Nullable$1(System.Int32),"sn":"Columns","box":function ($v) { return Bridge.box($v, System.Int32, System.Nullable.toString, System.Nullable.getHashCode);}},{"a":1,"backing":true,"n":"<Height>k__BackingField","t":4,"rt":$n[2].Nullable$1(System.Single),"sn":"Height","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}},{"a":1,"backing":true,"n":"<Rows>k__BackingField","t":4,"rt":$n[2].Nullable$1(System.Int32),"sn":"Rows","box":function ($v) { return Bridge.box($v, System.Int32, System.Nullable.toString, System.Nullable.getHashCode);}},{"a":1,"backing":true,"n":"<Seed>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Seed","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Width>k__BackingField","t":4,"rt":$n[2].Nullable$1(System.Single),"sn":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Nullable.toStringFn(System.Single.format), System.Nullable.getHashCodeFn(System.Single.getHashCode));}}]}; }, $n);
    $m("Minesweeper.CellParams", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].Int32,$n[2].Int32,$n[2].Single],"pi":[{"n":"row","pt":$n[2].Int32,"ps":0},{"n":"column","pt":$n[2].Int32,"ps":1},{"n":"width","pt":$n[2].Single,"ps":2}],"sn":"$ctor1"},{"a":2,"n":"Column","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Column","t":8,"rt":$n[2].Int32,"fg":"Column","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"Column"},{"a":2,"n":"Row","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Row","t":8,"rt":$n[2].Int32,"fg":"Row","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"Row"},{"a":2,"n":"Width","t":16,"rt":$n[2].Single,"g":{"a":2,"n":"get_Width","t":8,"rt":$n[2].Single,"fg":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"Width"},{"a":1,"backing":true,"n":"<Column>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Column","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Row>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Row","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Width>k__BackingField","t":4,"rt":$n[2].Single,"sn":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Minesweeper.IMinesweeperBase", function () { return {"att":161,"a":2,"m":[{"ab":true,"a":2,"n":"ClickOnCell","t":8,"pi":[{"n":"item","pt":$n[1].BaseCell,"ps":0},{"n":"placeAsFlag","pt":$n[2].Boolean,"ps":1}],"sn":"Minesweeper$IMinesweeperBase$ClickOnCell","rt":$n[2].Boolean,"p":[$n[1].BaseCell,$n[2].Boolean],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("Minesweeper.MinesweeperBase", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"CalculateBombs","t":8,"pi":[{"n":"cell","pt":$n[1].BaseCell,"ps":0}],"sn":"CalculateBombs","rt":$n[2].Void,"p":[$n[1].BaseCell]},{"a":2,"n":"ClickOnCell","t":8,"pi":[{"n":"item","pt":$n[1].BaseCell,"ps":0},{"n":"placeAsFlag","pt":$n[2].Boolean,"ps":1}],"sn":"ClickOnCell","rt":$n[2].Boolean,"p":[$n[1].BaseCell,$n[2].Boolean],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"v":true,"a":3,"n":"OnGameEnded","t":8,"pi":[{"n":"e","pt":$n[2].Boolean,"ps":0}],"sn":"OnGameEnded","rt":$n[2].Void,"p":[$n[2].Boolean]},{"v":true,"a":3,"n":"OnHasLost","t":8,"sn":"OnHasLost","rt":$n[2].Void},{"v":true,"a":3,"n":"OnHasWon","t":8,"sn":"OnHasWon","rt":$n[2].Void},{"a":2,"n":"Reset","t":8,"sn":"Reset","rt":$n[2].Void},{"a":2,"n":"SetDimensions","t":8,"pi":[{"n":"width","pt":$n[2].Single,"ps":0},{"n":"height","pt":$n[2].Single,"ps":1}],"sn":"SetDimensions","rt":$n[2].Single,"p":[$n[2].Single,$n[2].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Setup","t":8,"pi":[{"n":"config","pt":$n[1].MinesweeperConfig,"ps":0}],"sn":"Setup","rt":$n[2].Void,"p":[$n[1].MinesweeperConfig]},{"a":1,"n":"SetupBombs","t":8,"pi":[{"n":"numOfBombs","pt":$n[2].Int32,"ps":0},{"n":"seed","pt":$n[2].Int32,"ps":1},{"n":"firstCell","pt":$n[1].BaseCell,"ps":2}],"sn":"SetupBombs","rt":$n[2].Void,"p":[$n[2].Int32,$n[2].Int32,$n[1].BaseCell]},{"a":4,"n":"Show","t":8,"sn":"Show","rt":$n[2].Void},{"a":2,"n":"ShowCell","t":8,"pi":[{"n":"item","pt":$n[1].BaseCell,"ps":0}],"sn":"ShowCell","rt":$n[2].Void,"p":[$n[1].BaseCell]},{"a":1,"n":"ShowOthers","t":8,"pi":[{"n":"cell","pt":$n[1].BaseCell,"ps":0}],"sn":"ShowOthers","rt":$n[2].Void,"p":[$n[1].BaseCell]},{"a":2,"n":"ToggleFlagCell","t":8,"pi":[{"n":"item","pt":$n[1].BaseCell,"ps":0}],"sn":"ToggleFlagCell","rt":$n[2].Void,"p":[$n[1].BaseCell]},{"a":1,"n":"AllFlagged","t":16,"rt":$n[2].Boolean,"g":{"a":1,"n":"get_AllFlagged","t":8,"rt":$n[2].Boolean,"fg":"AllFlagged","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"AllFlagged"},{"a":1,"n":"AllVisible","t":16,"rt":$n[2].Boolean,"g":{"a":1,"n":"get_AllVisible","t":8,"rt":$n[2].Boolean,"fg":"AllVisible","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"AllVisible"},{"a":2,"n":"Cells","t":16,"rt":$n[0].IEnumerable$1(Minesweeper.BaseCell),"g":{"a":2,"n":"get_Cells","t":8,"rt":$n[0].IEnumerable$1(Minesweeper.BaseCell),"fg":"Cells"},"fn":"Cells"},{"a":2,"n":"Columns","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Columns","t":8,"rt":$n[2].Int32,"fg":"Columns","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Columns","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Columns"},"fn":"Columns"},{"a":2,"n":"Config","t":16,"rt":$n[1].MinesweeperConfig,"g":{"a":2,"n":"get_Config","t":8,"rt":$n[1].MinesweeperConfig,"fg":"Config"},"s":{"a":2,"n":"set_Config","t":8,"p":[$n[1].MinesweeperConfig],"rt":$n[2].Void,"fs":"Config"},"fn":"Config"},{"a":2,"n":"GameEnd","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_GameEnd","t":8,"rt":$n[2].Boolean,"fg":"GameEnd","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"GameEnd"},{"a":2,"n":"Grid","t":16,"rt":$n[1].MinesweeperGrid,"g":{"a":2,"n":"get_Grid","t":8,"rt":$n[1].MinesweeperGrid,"fg":"Grid"},"s":{"a":2,"n":"set_Grid","t":8,"p":[$n[1].MinesweeperGrid],"rt":$n[2].Void,"fs":"Grid"},"fn":"Grid"},{"a":2,"n":"HasBombs","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_HasBombs","t":8,"rt":$n[2].Boolean,"fg":"HasBombs","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"HasBombs"},{"a":2,"n":"Height","t":16,"rt":$n[2].Single,"g":{"a":2,"n":"get_Height","t":8,"rt":$n[2].Single,"fg":"Height","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Height","t":8,"p":[$n[2].Single],"rt":$n[2].Void,"fs":"Height"},"fn":"Height"},{"a":2,"n":"Lost","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_Lost","t":8,"rt":$n[2].Boolean,"fg":"Lost","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Lost"},{"v":true,"a":2,"n":"MaxScore","t":16,"rt":$n[2].Int32,"g":{"v":true,"a":2,"n":"get_MaxScore","t":8,"rt":$n[2].Int32,"fg":"MaxScore","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"MaxScore"},{"a":2,"n":"Rows","t":16,"rt":$n[2].Int32,"g":{"a":2,"n":"get_Rows","t":8,"rt":$n[2].Int32,"fg":"Rows","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Rows","t":8,"p":[$n[2].Int32],"rt":$n[2].Void,"fs":"Rows"},"fn":"Rows"},{"v":true,"a":2,"n":"Score","t":16,"rt":$n[2].Int32,"g":{"v":true,"a":2,"n":"get_Score","t":8,"rt":$n[2].Int32,"fg":"Score","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"Score"},{"a":2,"n":"Width","t":16,"rt":$n[2].Single,"g":{"a":2,"n":"get_Width","t":8,"rt":$n[2].Single,"fg":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Width","t":8,"p":[$n[2].Single],"rt":$n[2].Void,"fs":"Width"},"fn":"Width"},{"a":2,"n":"Win","t":16,"rt":$n[2].Boolean,"g":{"a":2,"n":"get_Win","t":8,"rt":$n[2].Boolean,"fg":"Win","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Win"},{"a":1,"n":"random","t":4,"rt":$n[2].Random,"sn":"random"},{"a":2,"n":"GameEnded","t":2,"ad":{"a":2,"n":"add_GameEnded","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addGameEnded","rt":$n[2].Void,"p":[Function]},"r":{"a":2,"n":"remove_GameEnded","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeGameEnded","rt":$n[2].Void,"p":[Function]}},{"a":2,"n":"HasLost","t":2,"ad":{"a":2,"n":"add_HasLost","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addHasLost","rt":$n[2].Void,"p":[Function]},"r":{"a":2,"n":"remove_HasLost","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeHasLost","rt":$n[2].Void,"p":[Function]}},{"a":2,"n":"HasWon","t":2,"ad":{"a":2,"n":"add_HasWon","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addHasWon","rt":$n[2].Void,"p":[Function]},"r":{"a":2,"n":"remove_HasWon","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeHasWon","rt":$n[2].Void,"p":[Function]}},{"a":1,"backing":true,"n":"<Columns>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Columns","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Config>k__BackingField","t":4,"rt":$n[1].MinesweeperConfig,"sn":"Config"},{"a":1,"backing":true,"n":"<Grid>k__BackingField","t":4,"rt":$n[1].MinesweeperGrid,"sn":"Grid"},{"a":1,"backing":true,"n":"<Height>k__BackingField","t":4,"rt":$n[2].Single,"sn":"Height","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"backing":true,"n":"<Rows>k__BackingField","t":4,"rt":$n[2].Int32,"sn":"Rows","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"backing":true,"n":"<Width>k__BackingField","t":4,"rt":$n[2].Single,"sn":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Minesweeper.Program", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Main","is":true,"t":8,"sn":"Main","rt":$n[2].Void}]}; }, $n);
});
